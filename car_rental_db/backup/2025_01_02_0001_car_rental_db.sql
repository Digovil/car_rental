IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'CovisionDB')
BEGIN
    CREATE DATABASE CovisionDB;
END;
GO

USE CovisionDB;

-- Crear tabla CLIENTE si no existe
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CLIENTE]') AND type = N'U')
BEGIN
    CREATE TABLE CLIENTE (
        ID_CLIENTE INT IDENTITY(1,1) PRIMARY KEY,
        CEDULA NVARCHAR(20) NOT NULL UNIQUE,
        NOMBRE NVARCHAR(100) NOT NULL,
        TELEFONO1 NVARCHAR(15),
        TELEFONO2 NVARCHAR(15),
        CREATED_AT DATETIME2 DEFAULT GETDATE(),
        UPDATED_AT DATETIME2 DEFAULT GETDATE()
    );
END;

-- Crear tabla CARRO si no existe
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CARRO]') AND type = N'U')
BEGIN
    CREATE TABLE CARRO (
        ID_CARRO INT IDENTITY(1,1) PRIMARY KEY,
        PLACA NVARCHAR(10) NOT NULL UNIQUE,
        MARCA NVARCHAR(50) NOT NULL,
        MODELO NVARCHAR(50) NOT NULL,
        COSTO DECIMAL(18, 2) NOT NULL,
        DISPONIBLE BIT NOT NULL DEFAULT 1, -- Booleano
        CREATED_AT DATETIME2 DEFAULT GETDATE(),
        UPDATED_AT DATETIME2 DEFAULT GETDATE()
    );
END;

-- Crear tabla ALQUILER si no existe
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ALQUILER]') AND type = N'U')
BEGIN
    CREATE TABLE ALQUILER (
        ID_ALQUILER INT IDENTITY(1,1) PRIMARY KEY,
        FECHA DATE NOT NULL,
        TIEMPO INT NOT NULL, -- En días
        VALORTOTAL DECIMAL(18, 2) NOT NULL,
        SALDO DECIMAL(18, 2) NOT NULL,
        ABONO_INICIAL DECIMAL(18, 2) NOT NULL,
        DEVUELTO BIT NOT NULL DEFAULT 0, -- Booleano
        ID_CLIENTE INT NOT NULL,
        ID_CARRO INT NOT NULL,
        CREATED_AT DATETIME2 DEFAULT GETDATE(),
        UPDATED_AT DATETIME2 DEFAULT GETDATE()
    );
END;

-- Crear tabla PAGOS si no existe
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PAGOS]') AND type = N'U')
BEGIN
    CREATE TABLE PAGOS (
        ID_PAGO INT IDENTITY(1,1) PRIMARY KEY,
        FECHA DATE NOT NULL,
        VALOR DECIMAL(18, 2) NOT NULL,
        ID_ALQUILER INT NOT NULL,
        CREATED_AT DATETIME2 DEFAULT GETDATE(),
        UPDATED_AT DATETIME2 DEFAULT GETDATE()
    );
END;



-- Crear relaciones solo si no existen
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_ALQUILER_CLIENTE')
BEGIN
    ALTER TABLE ALQUILER
    ADD CONSTRAINT FK_ALQUILER_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);
END;

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_ALQUILER_CARRO')
BEGIN
    ALTER TABLE ALQUILER
    ADD CONSTRAINT FK_ALQUILER_CARRO FOREIGN KEY (ID_CARRO) REFERENCES CARRO(ID_CARRO);
END;

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_PAGOS_ALQUILER')
BEGIN
    ALTER TABLE PAGOS
    ADD CONSTRAINT FK_PAGOS_ALQUILER FOREIGN KEY (ID_ALQUILER) REFERENCES ALQUILER(ID_ALQUILER);
END;



-- Crear relaciones solo si no existen
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_ALQUILER_CLIENTE')
BEGIN
    ALTER TABLE ALQUILER
    ADD CONSTRAINT FK_ALQUILER_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);
END;

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_ALQUILER_CARRO')
BEGIN
    ALTER TABLE ALQUILER
    ADD CONSTRAINT FK_ALQUILER_CARRO FOREIGN KEY (ID_CARRO) REFERENCES CARRO(ID_CARRO);
END;

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_PAGOS_ALQUILER')
BEGIN
    ALTER TABLE PAGOS
    ADD CONSTRAINT FK_PAGOS_ALQUILER FOREIGN KEY (ID_ALQUILER) REFERENCES ALQUILER(ID_ALQUILER);
END;

-- Creando registros de CLIENTE
INSERT INTO CLIENTE (CEDULA, NOMBRE, TELEFONO1, TELEFONO2)
VALUES 
('1234567890', 'Juan Pérez', '3001234567', '3101234567'),
('9876543210', 'María López', '3209876543', NULL),
('4567891234', 'Carlos García', '3014567890', '3114567890');

-- Creando registros de CARRO
INSERT INTO CARRO (PLACA, MARCA, MODELO, COSTO, DISPONIBLE)
VALUES 
('ABC123', 'Toyota', 'Corolla', 150000.00, 1),
('DEF456', 'Mazda', 'CX-5', 250000.00, 1),
('GHI789', 'Ford', 'Focus', 200000.00, 0);

-- Creando registros de ALQUILER
INSERT INTO ALQUILER (FECHA, TIEMPO, VALORTOTAL, SALDO, ABONO_INICIAL, DEVUELTO, ID_CLIENTE, ID_CARRO)
VALUES 
('2025-01-02', 5, 750000.00, 300000.00, 450000.00, 0, 1, 1),
('2025-01-03', 1, 600000.00, 200000.00, 400000.00, 1, 2, 2),
('2025-01-05', 7, 1400000.00, 500000.00, 900000.00, 0, 3, 1);

-- Creando registros de PAGOS
INSERT INTO PAGOS (FECHA, VALOR, ID_ALQUILER)
VALUES 
('2025-01-02', 200000.00, 1),
('2025-01-03', 100000.00, 1),
('2025-01-04', 200000.00, 2),
('2025-01-05', 300000.00, 3),
('2025-01-06', 200000.00, 3);



-- 1.2. Cuantos alquileres ha tenido un carro específico desde una fecha específica.

-- Contabilidad de alquieres de un carro específico por placa desde una fecha
SELECT C.PLACA, COUNT(*) as TOTAL_ALQUIELERES
FROM ALQUILER A
INNER JOIN CARRO C ON A.ID_CARRO = C.ID_CARRO 
WHERE C.PLACA = 'ABC123' AND A.FECHA >= '2025-01-01'
GROUP BY C.PLACA;


-- 1.3. Total de saldo en un día específico.

SELECT SUM(A.SALDO) AS TOTAL_SALDO
FROM ALQUILER A
WHERE A.FECHA = '2025-01-02';


-- 1.4. Consulta listando: CEDULA | NOMBRE | FECHA ALQUILER | TIEMPO ALQUILADO | SALDO | PLACA | MARCA

SELECT C.CEDULA, C.NOMBRE, A.FECHA AS FECHA_ALQUILER, A.TIEMPO AS TIEMPO_ALQUILADO, A.SALDO, CA.PLACA, CA.MARCA
FROM ALQUILER A
JOIN CLIENTE C ON A.ID_CLIENTE = C.ID_CLIENTE
JOIN CARRO CA ON A.ID_CARRO = CA.ID_CARRO;


-- 1.5. Clientes sin alquileres en un período específico.

SELECT C.CEDULA, C.NOMBRE
FROM CLIENTE C
WHERE NOT EXISTS (
    SELECT 1
    FROM ALQUILER A
    WHERE A.ID_CLIENTE = C.ID_CLIENTE
      AND A.FECHA BETWEEN '2025-01-02' AND '2025-01-31'
);


-- 1.6. Consulta desde fecha específica.

-- Pagos relacionados con alquileres desde una fecha determinada.
SELECT A.FECHA AS FECHA_ALQUILER, 
       COUNT(P.ID_PAGO) AS CANTIDAD_PAGOS, 
       SUM(P.VALOR) AS TOTAL_PAGADO, 
       MAX(P.VALOR) AS MAXIMO_VALOR
FROM ALQUILER A
LEFT JOIN PAGOS P ON A.ID_ALQUILER = P.ID_ALQUILER
WHERE A.FECHA >= '2025-01-02'
GROUP BY A.FECHA;

-- 1.7. Consolidado por carros en un período específico.

-- Este período está entre 2 de enero hasta el día 3 de enero.
SELECT CA.PLACA AS CODCARRO, CA.MODELO, CA.MARCA, CA.COSTO,
       COUNT(A.ID_ALQUILER) AS CANTIDAD_ALQUILERES,
       SUM(A.VALORTOTAL) AS TOTAL_ALQUILERES
FROM CARRO CA
LEFT JOIN ALQUILER A ON CA.ID_CARRO = A.ID_CARRO
WHERE A.FECHA BETWEEN '2025-01-02' AND '2025-01-03'
GROUP BY CA.PLACA, CA.MODELO, CA.MARCA, CA.COSTO;



-- 1.8. El primer alquiler de un cliente.

SELECT C.CEDULA, C.NOMBRE, MIN(A.FECHA) AS PRIMER_ALQUILER, 
       CA.PLACA, CA.MODELO, CA.MARCA, CA.COSTO
FROM CLIENTE C
JOIN ALQUILER A ON C.ID_CLIENTE = A.ID_CLIENTE
JOIN CARRO CA ON A.ID_CARRO = CA.ID_CARRO
WHERE C.CEDULA = '4567891234'
GROUP BY C.CEDULA, C.NOMBRE, CA.PLACA, CA.MODELO, CA.MARCA, CA.COSTO;





